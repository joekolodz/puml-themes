''
'' A theme based on the Coyote Logistics color scheme
''
'' Author: Joe Kolodz
'' Copyright (c) 2022 by Joe kOlodz
!$THEME = "coyotelogistics"

!if %not(%variable_exists("$BGCOLOR"))
!$BGCOLOR = "transparent"
!endif

'color definitions - do not use these directly
!$WHITE = "#fff"
!$OFF_WHITE = "#f7f3f7"

!$GREEN = "#3bea1f"
!$LIGHT_GREEN = "#69f438"
!$MEDIUM_GREEN = "#33cc32"
!$DARK_GREEN = "#090"

!$LIGHT_BLUE = "#5fffd7"
!$MEDIUM_BLUE = "#00bfa8"
!$DARK_BLUE = "#008083"

!$YELLOW = "#ffff00"
!$GOLD = "#cb9901"

!$RED = "#f00"
!$LIGHT_RED = "#c33"
!$DARK_RED = "#980101"

!$LIGHT_GRAY = "#404040"
!$MEDIUM_GRAY = "#333"
!$DARK_GRAY = "#313131"
!$BLACK = "#000"









'definitions for color usages, do not use # values here for colors. define them above first
!$BACKGROUND = $BLACK
!$TEXT_HEADER = $BLACK
!$TEXT = $OFF_WHITE
!$ERROR = $LIGHT_RED
!$HEADER_BACKGROUND = $DARK_GREEN
!$OBJECT_BACKGROUND = $DARK_GRAY
!$OBJECT_BORDER = $MEDIUM_GREEN

!procedure $success($msg)
  <font color=$GREEN><b>$msg
!endprocedure

!procedure $failure($msg)
  <font color=$RED><b>$msg
!endprocedure

!procedure $warning($msg)
  <font color=$GOLD><b>$msg
!endprocedure

!procedure $primary_scheme()
	FontColor $TEXT_HEADER
	BorderColor $OBJECT_BORDER
	BackgroundColor $OBJECT_BACKGROUND
!endprocedure

!procedure $secondary_scheme()
	FontColor $TEXT_HEADER
	BorderColor $OBJECT_BORDER
	BackgroundColor $WHITE-#fefefe
!endprocedure

skinparam BackgroundColor       $BACKGROUND
skinparam useBetaStyle          false
skinparam defaultFontName       "Arial"
skinparam defaultFontSize       14
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           6
skinparam ParticipantPadding    30
skinparam BoxPadding            40
skinparam Padding               1
skinparam PackageBackgroundColor $RED

skinparam stereotype {
    'Class and Entity
    CBackgroundColor $GREEN
    CBorderColor $MEDIUM_GRAY
    
    'Abstract and Abstract Class
    ABackgroundColor $LIGHT_BLUE
    ABorderColor $MEDIUM_GRAY
    
    'Interface
    IBackgroundColor $GOLD
    IBorderColor $MEDIUM_GRAY
    
    'Enum
    EBackgroundColor $YELLOW
    EBorderColor $MEDIUM_GRAY
    
    'Annotation
    NBackgroundColor $OFF_WHITE
    NBorderColor $MEDIUM_GRAY
}

skinparam title {
	BorderColor $BGCOLOR
	BackgroundColor $BACKGROUND
    FontColor $OFF_WHITE
}

skinparam legend {
	BackgroundColor $OBJECT_BACKGROUND
	BorderColor $OBJECT_BORDER
	FontColor $TEXT
}

!startsub swimlane
skinparam swimlane {
	BorderColor $OBJECT_BORDER
	BorderThickness 2
	TitleBackgroundColor  $HEADER_BACKGROUND
	TitleFontColor $TEXT_HEADER
}
!endsub

!startsub activity

skinparam activity {
	FontColor $TEXT
	BorderColor $OBJECT_BORDER
	BackgroundColor $OBJECT_BACKGROUND
	BarColor $GREEN
	StartColor $YELLOW
	EndColor $RED
	DiamondBackgroundColor $HEADER_BACKGROUND
  	DiamondBorderColor $OBJECT_BORDER
	DiamondFontColor $TEXT
}

!endsub

!startsub participant

skinparam participant {
	$primary_scheme()
	ParticipantBorderThickness 2
}
!endsub

!startsub actor

skinparam actor {
	$primary_scheme()
	FontColor $PRIMARY
}
!endsub

!startsub arrow

skinparam arrow {
	Thickness 2
	Color $DARK_BLUE
	FontColor $TEXT
}

!endsub

!startsub sequence

skinparam sequence {    
	BorderColor $OBJECT_BORDER
	' For some reason sequence title font color does not pick up from global
	TitleFontColor $TEXT_HEADER
	BackgroundColor $OBJECT_BACKGROUND
    HeaderBackgroundColor $OBJECT_BACKGROUND
	StartColor $YELLOW
	EndColor $RED
	''
	BoxBackgroundColor $BGCOLOR
	BoxBorderColor $OBJECT_BORDER
	BoxFontColor $TEXT
	''
	DelayFontColor $TEXT
	''
	LifeLineBorderColor $DARK_GREEN
	LifeLineBorderThickness 2
	LifeLineBackgroundColor $YELLOW
	''
	GroupBorderColor $DARK_BLUE
	GroupFontColor $TEXT
	GroupHeaderFontColor $TEXT_HEADER
	GroupBackgroundColor $MEDIUM_BLUE
	GroupBodyBackgroundColor $OBJECT_BACKGROUND
	GroupHeaderBackgroundColor $BACKGROUND
	''
	DividerBackgroundColor $OBJECT_BACKGROUND
    DividerBorderColor $OBJECT_BORDER
    DividerBorderThickness 2
    DividerFontColor $GOLD
	''
	ReferenceBackgroundColor $OBJECT_BACKGROUND
	ReferenceBorderColor $OBJECT_BORDER
	ReferenceFontColor $DARK_BLUEGRAY
	ReferenceHeaderFontColor $TEXT_HEADER
	''
	StereotypeFontColor $TEXT

	AttributeFontColor $TEXT
	AttributeFontSize 50
}
!endsub


!startsub partition

skinparam partition {
	BorderColor $PRIMARY
	FontColor $PRIMARY
	BackgroundColor $BGCOLOR
}
!endsub

!startsub collections

skinparam collections {
	$primary_scheme()
}
!endsub

!startsub control

skinparam control {
	$primary_scheme()
	FontColor $PRIMARY
}
!endsub

!startsub entity

skinparam entity {
	$primary_scheme()
	FontColor $PRIMARY
}
!endsub

!startsub boundary

skinparam boundary {
	$primary_scheme()
	FontColor $PRIMARY
}
!endsub

!startsub agent

skinparam agent {
	BackgroundColor #orange
	BorderColor #999999
	FontColor #333333
}
!endsub

!startsub note

skinparam note {
	BorderThickness 1
    BackgroundColor $GOLD
	BorderColor $OBJECT_BORDER
	FontColor $TEXT_HEADER
}

!endsub

!startsub artifact

skinparam artifact {
	BackgroundColor $PRIMARY-$PRIMARY_LIGHT
	BorderColor $BORDER
	FontColor $PRIMARY_TEXT
}
!endsub

!startsub component

skinparam component {
	$primary_scheme()
}
!endsub

!startsub interface

skinparam interface {
	BackgroundColor  $DANGER_LIGHT
	BorderColor  $DANGER
	FontColor $DARK
}
!endsub

!startsub storage

skinparam storage {
	BackgroundColor $WARNING_LIGHT-$WARNING
  	BorderColor $WARNING
	FontColor $WARNING_TEXT
}
!endsub

!startsub node

skinparam node {
	BackgroundColor $SECONDARY_LIGHT-$SECONDARY
	BorderColor $SECONDARY_DARK
	FontColor $PRIMARY
}
!endsub

!startsub cloud

skinparam cloud {
	BackgroundColor transparent
	BorderColor #F2FCFE
	FontColor $PRIMARY
}
!endsub

!startsub database

skinparam database {
	$primary_scheme()
	' FontColor $PRIMARY
	BorderColor $PRIMARY_DARK
	' BackgroundColor  $BGCOLOR
}
!endsub

!startsub class

skinparam class{
    $primary_scheme()

    HeaderBackgroundColor $HEADER_BACKGROUND
	StereotypeFontColor $PRIMARY_TEXT
    FontSize 14
    BorderThickness 1
    AttributeFontColor $TEXT
    AttributeFontSize 14
}

!endsub

!startsub object

skinparam object {
	$primary_scheme()
	StereotypeFontColor $PRIMARY_TEXT
	BorderThickness 1
	AttributeFontColor $PRIMARY_TEXT
	AttributeFontSize 11
}
!endsub

!startsub usecase

skinparam usecase {
	$primary_scheme()
	BorderThickness 2
	StereotypeFontColor $PRIMARY_TEXT
}
!endsub

!startsub rectangle

skinparam rectangle {
	$secondary_scheme()
	BorderThickness 2
	StereotypeFontColor $PRIMARY_TEXT
}
!endsub

!startsub package

skinparam package {
	FontColor $TEXT_HEADER
	BorderColor $OBJECT_BORDER
	BackgroundColor $OBJECT_BACKGROUND
    StereotypeFontColor $TEXT
    
	BorderThickness 3
}

!endsub

!startsub folder

skinparam folder {
	BackgroundColor $WHITE-$SECONDARY_LIGHT
  	BorderColor $WARNING
	FontColor $WARNING
	BorderThickness 2
}
!endsub

!startsub frame

skinparam frame {
	BackgroundColor $WHITE-$SECONDARY_LIGHT
  	BorderColor $INFO
	FontColor $INFO
	BorderThickness 2
}
!endsub

!startsub state

skinparam state {
	$primary_scheme()
	BorderColor $PRIMARY_DARK
	StartColor $INFO
	EndColor $INFO
	AttributeFontColor $PRIMARY_TEXT
	AttributeFontSize 11
}
!endsub

!startsub queue

skinparam queue {
	$primary_scheme()
}
!endsub

!startsub card

skinparam card {
	BackgroundColor $INFO_LIGHT-$INFO
	BorderColor $INFO
	FontColor $INFO_TEXT
}
!endsub

!startsub file

skinparam file {
	BackgroundColor $SECONDARY_LIGHT-$SECONDARY
	BorderColor $INFO
	FontColor $SECONDARY_TEXT

}
!endsub

!startsub stack

skinparam stack {
	$primary_scheme()
}
!endsub





'end of theme



title 

Coyote Logistics Theme Sample
Activity Diagram

end title





participant Participant as Foo
actor       Actor       as Foo1
boundary    Boundary    as Foo2
control     Control     as Foo3
entity      Entity      as Foo4
database    Database    as Foo5
collections Collections as Foo6
queue       Queue       as Foo7
Foo -> Foo1 : To actor 
activate Foo1
Foo -> Foo2 : To boundary
deactivate Foo1
Foo -> Foo3 : To control
Foo -> Foo4 : To entity
Foo -> Foo5 : To database
activate Foo5
Foo -> Foo6 : To collections
Foo -> Foo7: To queue
deactivate Foo5
participant "Famous Bob" as Bob << Generated >>
participant Alice << (C,$GOLD) Testable >>

Alice -> Bob: Authentication Request

alt successful case

    Bob -> Alice: Authentication Accepted
rnote left: this is a first note
else some kind of failure

    Bob -> Alice: Authentication Failure
    group My own label
    Alice -> Log : Log attack start
        loop 1000 times
            Alice -> Bob: DNS Attack
        end
    Alice -> Log : Log attack end
    end

else Another type of failure

   Bob -> Alice: Please repeat

end
